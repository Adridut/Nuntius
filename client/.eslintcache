[{"C:\\Users\\Dutfo\\Documents\\Dev\\Nuntius\\client\\src\\index.tsx":"1","C:\\Users\\Dutfo\\Documents\\Dev\\Nuntius\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Dutfo\\Documents\\Dev\\Nuntius\\client\\src\\App.tsx":"3","C:\\Users\\Dutfo\\Documents\\Dev\\Nuntius\\client\\src\\Pages\\MainPage.tsx":"4","C:\\Users\\Dutfo\\Documents\\Dev\\Nuntius\\client\\src\\Components\\Header.tsx":"5","C:\\Users\\Dutfo\\Documents\\Dev\\Nuntius\\client\\src\\Pages\\Room.tsx":"6","C:\\Users\\Dutfo\\Documents\\Dev\\Nuntius\\client\\src\\Pages\\Login.tsx":"7","C:\\Users\\Dutfo\\Documents\\Dev\\Nuntius\\client\\src\\Components\\CustomButton.tsx":"8","C:\\Users\\Dutfo\\Documents\\Dev\\Nuntius\\client\\src\\Components\\Message.tsx":"9"},{"size":519,"mtime":1619527608723,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1619527608724,"results":"12","hashOfConfig":"11"},{"size":347,"mtime":1619527608720,"results":"13","hashOfConfig":"11"},{"size":723,"mtime":1619527608722,"results":"14","hashOfConfig":"11"},{"size":338,"mtime":1619527608721,"results":"15","hashOfConfig":"11"},{"size":5815,"mtime":1619527608723,"results":"16","hashOfConfig":"11"},{"size":2026,"mtime":1619527608722,"results":"17","hashOfConfig":"11"},{"size":362,"mtime":1619527608720,"results":"18","hashOfConfig":"11"},{"size":1032,"mtime":1619527608721,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"tyiz26",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Dutfo\\Documents\\Dev\\Nuntius\\client\\src\\index.tsx",[],["41","42"],"C:\\Users\\Dutfo\\Documents\\Dev\\Nuntius\\client\\src\\reportWebVitals.js",[],["43","44"],"C:\\Users\\Dutfo\\Documents\\Dev\\Nuntius\\client\\src\\App.tsx",[],"C:\\Users\\Dutfo\\Documents\\Dev\\Nuntius\\client\\src\\Pages\\MainPage.tsx",[],"C:\\Users\\Dutfo\\Documents\\Dev\\Nuntius\\client\\src\\Components\\Header.tsx",[],"C:\\Users\\Dutfo\\Documents\\Dev\\Nuntius\\client\\src\\Pages\\Room.tsx",["45"],"import { io } from 'socket.io-client'\r\nimport { useEffect, useState } from 'react'\r\nimport CustomButton from '../Components/CustomButton'\r\nimport Message from '../Components/Message'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUsers } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\n\r\n\r\n\r\nlet socket: any;\r\nconst CONNECTION_PORT = 'localhost:3001/'\r\n\r\nfunction Room(props: any) {\r\n\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([{ author: \"\", message: \"Welcome to room \" + props.room }]);\r\n    const [users, setUsers] = useState([]);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [usersVisibility, setUsersVisibility] = useState(\"invisible\")\r\n\r\n    useEffect(() => {\r\n        socket = io(CONNECTION_PORT);\r\n        socket.emit(\"join_room\", props.room, props.userName);\r\n    }, [CONNECTION_PORT]);\r\n\r\n    useEffect(() => {\r\n        socket.on('new_user', ({ users, user }: any) => {\r\n            setUsers(users);\r\n            setMessages([...messages, { author: \"\", message: user + \" joined the room\" }])\r\n        });\r\n    });\r\n\r\n    useEffect(() => {\r\n        socket.on('user_left', ({ users, user }: any) => {\r\n            setUsers(users);\r\n            setMessages([...messages, { author: \"\", message: user + \" left the room\" }])\r\n        });\r\n    });\r\n\r\n    useEffect(() => {\r\n        socket.on(\"receive_message\", (content: any) => {\r\n            setMessages([...messages, content])\r\n        });\r\n    });\r\n\r\n    const sendMessage = () => {\r\n\r\n        if (!message) {\r\n            setErrorMessage(\"Message cannot be empty.\")\r\n        } else {\r\n            setErrorMessage(\"\")\r\n            let messageInfo = {\r\n                room: props.room,\r\n                content: {\r\n                    author: props.userName,\r\n                    message: message,\r\n                }\r\n            }\r\n\r\n            socket.emit(\"send_message\", messageInfo)\r\n            setMessages([...messages, messageInfo.content])\r\n            setMessage(\"\");\r\n        }\r\n    }\r\n\r\n    const collapse = () => {\r\n        if (usersVisibility === \"visible\") {\r\n            setUsersVisibility(\"invisible\")\r\n        } else {\r\n            setUsersVisibility(\"visible\")\r\n        }\r\n    }\r\n\r\n    function handleLogin() {\r\n        // Here, we invoke the callback with the new value\r\n        props.onChange(false, \"\", \"\");\r\n        socket.emit(\"leave_room\", props.room, props.userName)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"tw-h-5/6\">\r\n            <div className=\"tw-flex tw-w-full tw-h-full\">\r\n                <div className=\"tw-w-full tw-flex tw-justify-center\">\r\n                    <div className=\"tw-w-3/5 tw-h-2/3 tw-w-full\">\r\n                        <div className=\"tw-w-full tw-flex tw-justify-center tw-my-5\">\r\n                            <div>\r\n                                <CustomButton onClick={collapse} color=\"yellow\" text={<FontAwesomeIcon size=\"lg\" icon={faUsers} />} \r\n                                custom=\"tw-h-10 tw-w-10 tw-flex tw-items-center tw-justify-center tw-rounded-full tw-absolute tw-left-3 tw-cursor-pointer\">\r\n                                </CustomButton>\r\n                                <div className={\"tw-w-4/5 sm:tw-w-1/5 tw-overflow-y-auto tw-left-5 tw-mt-8 tw-absolute tw-p-2 tw-shadow-lg tw-bg-gray-200 tw-\" + usersVisibility} style={{ height: \"40%\" }}>\r\n                                    <div>Users:</div>\r\n                                    {users.map((user: any, index: any) => {\r\n                                        return <div className=\"tw-mt-2 tw-flex tw-ml-1\">\r\n                                            <div className=\"tw-mr-1\">-</div>\r\n                                            <div className={(user.username === props.userName) ? \"tw-text-indigo-500 tw-break-all\" : \"tw-text-yellow-500 tw-break-all\"}>{user.username}</div>\r\n                                        </div>\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                            <h4 className=\"tw-flex tw-justify-center tw-break-all tw-w-1/2\">{\"Room: \" + props.room}</h4>\r\n                        </div>\r\n                        <div className=\"tw-flex tw-justify-center tw-h-5/6 sm:tw-h-full\">\r\n                            <div className=\"tw-border tw-overflow-y-auto tw-shadow tw-p-1 tw-bg-gray-50 tw-w-5/6\">\r\n                                {messages.map((value) => {\r\n                                    return <Message key=\"{value}\" content={value.message} author={value.author} userName={props.userName}></Message>\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tw-absolute tw-bottom-2 tw-right-1/2\">\r\n                        <div className=\"tw-relative tw--right-1/2\">\r\n                            <div className=\"tw-flex\">\r\n                                <input className=\"tw-mr-1 focus:tw-border-indigo-500 tw-shadow\" type=\"text\" placeholder=\"Message...\" onChange={(e) => setMessage(e.target.value)} value={message} style={{ width: \"30vh\" }}></input>\r\n                                <CustomButton text=\"Send\" color=\"indigo\" onClick={sendMessage} />\r\n                            </div>\r\n                            <h6 className=\"tw-text-red-500 tw-h-6\">{errorMessage}</h6>\r\n                        </div>\r\n                        <div className=\"tw-relative tw--right-1/2 tw-flex tw-justify-center\">\r\n                            <CustomButton text=\"Leave room\" color=\"red\" onClick={handleLogin} custom=\"tw-h-8 tw-flex tw-items-center\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Room;","C:\\Users\\Dutfo\\Documents\\Dev\\Nuntius\\client\\src\\Pages\\Login.tsx",[],"C:\\Users\\Dutfo\\Documents\\Dev\\Nuntius\\client\\src\\Components\\CustomButton.tsx",[],"C:\\Users\\Dutfo\\Documents\\Dev\\Nuntius\\client\\src\\Components\\Message.tsx",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":26,"column":8,"nodeType":"52","endLine":26,"endColumn":25,"suggestions":"53"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.room' and 'props.userName'. Either include them or remove the dependency array. Outer scope values like 'CONNECTION_PORT' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["56"],"no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [props.room, props.userName]",{"range":"59","text":"60"},[882,899],"[props.room, props.userName]"]