[{"C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\index.tsx":"1","C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\App.tsx":"3","C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\Components\\Icons\\EraserIcon.tsx":"4","C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\Components\\Header.tsx":"5","C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\Pages\\Login.tsx":"6","C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\Pages\\MainMenu.tsx":"7","C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\Components\\Modal.tsx":"8","C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\Pages\\Room.tsx":"9","C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\Components\\DrawPanel.tsx":"10","C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\Components\\UserList.tsx":"11","C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\Components\\CustomButton.tsx":"12"},{"size":519,"mtime":1608928068038,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":726,"mtime":1610731623198,"results":"16","hashOfConfig":"14"},{"size":610,"mtime":1608928068038,"results":"17","hashOfConfig":"14"},{"size":468,"mtime":1610136383008,"results":"18","hashOfConfig":"14"},{"size":1341,"mtime":1610900825344,"results":"19","hashOfConfig":"14"},{"size":1430,"mtime":1610900976289,"results":"20","hashOfConfig":"14"},{"size":559,"mtime":1610899739853,"results":"21","hashOfConfig":"14"},{"size":4255,"mtime":1610900749257,"results":"22","hashOfConfig":"14"},{"size":3373,"mtime":1610136393660,"results":"23","hashOfConfig":"14"},{"size":439,"mtime":1610899825722,"results":"24","hashOfConfig":"14"},{"size":346,"mtime":1610900741935,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"sp0zz8",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\index.tsx",[],["53","54"],"C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\reportWebVitals.js",[],["55","56"],"C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\App.tsx",[],"C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\Components\\Icons\\EraserIcon.tsx",[],"C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\Components\\Header.tsx",[],"C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\Pages\\Login.tsx",[],"C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\Pages\\MainMenu.tsx",[],"C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\Components\\Modal.tsx",[],"C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\Pages\\Room.tsx",["57","58","59","60","61"],"C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\Components\\DrawPanel.tsx",["62","63"],"import { useEffect, useRef, useState } from 'react'\r\nimport { Context } from 'vm';\r\nimport { CirclePicker } from 'react-color';\r\nimport EraserIcon from './Icons/EraserIcon'\r\n\r\n\r\n\r\n\r\nfunction DrawPanel(this: any) {\r\n\r\n    const canvasRef = useRef<HTMLCanvasElement | null>(null);\r\n    const contextRef = useRef<Context | null>(null);\r\n    const [isDrawing, setIsDrawing] = useState(false);\r\n    const [penColor, setPenColor] = useState(\"#000\");\r\n    const [penSize, setPenSize] = useState(5);\r\n    const circleColors = [\"#000000\", \"#f44336\", \"#E91E63\", \"#9C27B0\", \"#2196F3\", \"#00BCD4\",\r\n        \"#4CAF50\", \"#CDDC39\", \"#FFEB3B\", \"#FF9800\", \"#795548\", \"#9E9E9E\"]\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        if (canvas) {\r\n            canvas.width = window.innerWidth;\r\n            canvas.height = window.innerHeight;\r\n            canvas.style.width = `${window.innerWidth / 2}px`;\r\n            canvas.style.height = `${window.innerHeight / 2}px`;\r\n            const context = canvas.getContext(\"2d\");\r\n            if (context) {\r\n                context.scale(2, 2);\r\n                context.lineCap = \"round\"; //Round ending \r\n                context.strokeStyle = \"#000\";\r\n                context.lineWidth = 5;\r\n                contextRef.current = context\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    const startDrawing: any = ({ nativeEvent }: any) => {\r\n        const { offsetX, offsetY } = nativeEvent;\r\n        if (contextRef.current) {\r\n            contextRef.current.beginPath()\r\n            contextRef.current.moveTo(offsetX, offsetY)\r\n            setIsDrawing(true);\r\n        }\r\n    }\r\n\r\n    const stopDrawing: any = () => {\r\n        if (contextRef.current) {\r\n            contextRef.current.closePath()\r\n        }\r\n        setIsDrawing(false);\r\n    }\r\n\r\n    const draw: any = ({ nativeEvent }: any) => {\r\n        if (isDrawing) {\r\n            const { offsetX, offsetY } = nativeEvent;\r\n            if (contextRef.current) {\r\n                contextRef.current.lineTo(offsetX, offsetY);\r\n                contextRef.current.stroke()\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleColorChange: any = (color: any) => {\r\n        setPenColor(color.hex)\r\n        if (contextRef.current) {\r\n            contextRef.current.strokeStyle = color.hex\r\n        }\r\n    }\r\n\r\n    const erase: any = () => {\r\n        setPenColor(\"#fff\")\r\n        if (contextRef.current) {\r\n            contextRef.current.strokeStyle = \"#fff\"\r\n        }\r\n    }\r\n\r\n    const changePenSize: any = (value: any) => {\r\n        setPenSize(value.eventPhase)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"tw-flex tw-justify-center\">\r\n                <canvas className=\"tw-border-2 tw-bg-red-300\" onMouseDown={startDrawing} onMouseUp={stopDrawing} onMouseMove={draw} ref={canvasRef} />\r\n            </div>\r\n            <div className=\"tw-flex tw-justify-center tw-mt-5 tw-items-center\">\r\n                <div className=\"tw-mr-2\">\r\n                    <CirclePicker color={penColor} onChangeComplete={handleColorChange} colors={circleColors} />\r\n                </div>\r\n                <div className=\"tw-ml-2 tw-cursor-pointer tw-flex tw-justify-center tw-mt-5 tw-items-center\" onClick={erase}>\r\n                    <EraserIcon></EraserIcon>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DrawPanel;","C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\Components\\UserList.tsx",["64"],"C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\Components\\CustomButton.tsx",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":21,"column":11,"nodeType":"71","messageId":"72","endLine":21,"endColumn":25},{"ruleId":"69","severity":1,"message":"73","line":28,"column":12,"nodeType":"71","messageId":"72","endLine":28,"endColumn":17},{"ruleId":"69","severity":1,"message":"74","line":29,"column":12,"nodeType":"71","messageId":"72","endLine":29,"endColumn":18},{"ruleId":"75","severity":1,"message":"76","line":37,"column":8,"nodeType":"77","endLine":37,"endColumn":25,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":53,"column":22,"nodeType":"81","messageId":"82","endLine":53,"endColumn":24},{"ruleId":"69","severity":1,"message":"83","line":15,"column":12,"nodeType":"71","messageId":"72","endLine":15,"endColumn":19},{"ruleId":"69","severity":1,"message":"84","line":80,"column":11,"nodeType":"71","messageId":"72","endLine":80,"endColumn":29},{"ruleId":"79","severity":1,"message":"80","line":6,"column":59,"nodeType":"81","messageId":"82","endLine":6,"endColumn":61},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"@typescript-eslint/no-unused-vars","'GAME_MODE_DONE' is assigned a value but never used.","Identifier","unusedVar","'guess' is assigned a value but never used.","'phrase' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'room' and 'userName'. Either include them or remove the dependency array. Outer scope values like 'CONNECTION_PORT' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["87"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'penSize' is assigned a value but never used.","'changePenSize' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},"Update the dependencies array to be: [room, userName]",{"range":"90","text":"91"},[1149,1166],"[room, userName]"]