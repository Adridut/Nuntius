[{"C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\index.tsx":"1","C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\App.tsx":"3","C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\Components\\Header.tsx":"4","C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\Pages\\Login.tsx":"5","C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\Pages\\Room.tsx":"6","C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\Components\\UserList.tsx":"7","C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\Components\\CustomButton.tsx":"8","C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\Components\\Message.tsx":"9"},{"size":519,"mtime":1608928068038,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":623,"mtime":1617477502166,"results":"13","hashOfConfig":"11"},{"size":353,"mtime":1617545337140,"results":"14","hashOfConfig":"11"},{"size":1395,"mtime":1617545325763,"results":"15","hashOfConfig":"11"},{"size":3403,"mtime":1617550040589,"results":"16","hashOfConfig":"11"},{"size":553,"mtime":1617532114754,"results":"17","hashOfConfig":"11"},{"size":346,"mtime":1610900741935,"results":"18","hashOfConfig":"11"},{"size":740,"mtime":1617545597975,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"sp0zz8",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},"C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\index.tsx",[],["43","44"],"C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\reportWebVitals.js",[],["45","46"],"C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\App.tsx",[],"C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\Components\\Header.tsx",[],"C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\Pages\\Login.tsx",[],"C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\Pages\\Room.tsx",["47"],"import { io } from 'socket.io-client'\r\nimport { useEffect, useState } from 'react'\r\nimport CustomButton from '../Components/CustomButton'\r\nimport UserList from '../Components/UserList'\r\nimport Message from '../Components/Message'\r\n\r\n\r\nlet socket: any;\r\nconst CONNECTION_PORT = 'localhost:3001/'\r\n\r\nfunction Room(props: any) {\r\n\r\n    const userName = props.location.state.userName;\r\n    const room = props.location.search.split(\"?id=\")[1];\r\n\r\n\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([{ author: \"Nuntius\", message: \"Welcome to room \" + room }]);\r\n    const [users, setUsers] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        socket = io(CONNECTION_PORT);\r\n        socket.emit(\"join_room\", room, userName);\r\n    }, [CONNECTION_PORT]);\r\n\r\n    useEffect(() => {\r\n        socket.on('new_user', ({ users, user }: any) => {\r\n            setUsers(users);\r\n            setMessages([...messages, { author: \"Nuntius\", message: user + \" joined the room\" }])\r\n        });\r\n    });\r\n\r\n    useEffect(() => {\r\n        socket.on('user_left', ({ users, user }: any) => {\r\n            setUsers(users);\r\n            setMessages([...messages, { author: \"Nuntius\", message: user + \" left the room\" }])\r\n        });\r\n    });\r\n\r\n    useEffect(() => {\r\n        socket.on(\"receive_message\", (content: any) => {\r\n            setMessages([...messages, content])\r\n        });\r\n    });\r\n\r\n    const sendMessage = () => {\r\n        let messageInfo = {\r\n            room: room,\r\n            content: {\r\n                author: userName,\r\n                message: message,\r\n            }\r\n        }\r\n\r\n        socket.emit(\"send_message\", messageInfo)\r\n        setMessages([...messages, messageInfo.content])\r\n        setMessage(\"\");\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"tw-h-5/6\">\r\n            <div className=\"tw-flex tw-w-full tw-h-full\">\r\n                <div className=\"tw-absolute\">\r\n                    <h4 className=\"tw-mt-5 tw-ml-5\">{\"Room: \" + room}</h4>\r\n                    <UserList userName={userName} users={users}></UserList>\r\n                </div>\r\n                <div className=\"tw-w-full tw-flex tw-justify-center\">\r\n                    <div className=\"tw-w-3/5 tw-h-2/3 tw-w-full\">\r\n                        <h4 className=\"tw-my-5 tw-flex tw-justify-center\">Messages: </h4>\r\n                        <div className=\"tw-overflow-y-auto tw-h-full tw-flex tw-justify-center\">\r\n                            <div>\r\n                                {messages.map((value) => {\r\n                                    return <Message key=\"{value}\" content={value.message} author={value.author} userName={userName}></Message>\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tw-absolute tw-bottom-10 tw-right-1/2\">\r\n                        <div className=\"tw-relative tw--right-1/2 tw-flex\">\r\n                            <input className=\"tw-mr-1 focus:tw-border-indigo-500 tw-shadow\" type=\"text\" placeholder=\"Message...\" onChange={(e) => setMessage(e.target.value)} value={message}></input>\r\n                            <CustomButton text=\"Send\" color=\"indigo\" onClick={sendMessage} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Room;","C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\Components\\UserList.tsx",[],"C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\Components\\CustomButton.tsx",[],"C:\\Users\\Win10\\Dev\\ReactProjects\\telestration\\client\\src\\Components\\Message.tsx",["48"],"function Message({ content, author, userName }: any) {\r\n    let message;\r\n    if (author != \"Nuntius\") {\r\n        message = <div className={(author === userName) ? \"tw-bg-indigo-500 tw-my-2 tw-rounded tw-p-2\" : \"tw-bg-yellow-500 tw-my-2 tw-rounded tw-p-2\"} style={{ width: \"fit-content\", height: \"fit-content\" }}>\r\n            <h6 className=\"tw-mb-1\">{author}</h6>\r\n            <div className=\"tw-text-white\">{content}</div>\r\n        </div>\r\n    } else {\r\n\r\n        message = <div className=\"tw-bg-red-500 tw-my-2 tw-rounded tw-p-2\" style={{ width: \"fit-content\", height: \"fit-content\" }}>\r\n            <div className=\"tw-text-white\">{content}</div>\r\n        </div>\r\n    }\r\n    return (\r\n        message\r\n    )\r\n}\r\n\r\nexport default Message;",["49","50"],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":25,"column":8,"nodeType":"57","endLine":25,"endColumn":25,"suggestions":"58"},{"ruleId":"59","severity":1,"message":"60","line":3,"column":16,"nodeType":"61","messageId":"62","endLine":3,"endColumn":18},{"ruleId":"51","replacedBy":"63"},{"ruleId":"53","replacedBy":"64"},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'room' and 'userName'. Either include them or remove the dependency array. Outer scope values like 'CONNECTION_PORT' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["67"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["65"],["66"],"no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [room, userName]",{"range":"70","text":"71"},[770,787],"[room, userName]"]